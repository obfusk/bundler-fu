module BundlerFu
  grammar BundlerFu
    rule file
      gems "\n" platforms "\n" dependencies {
        def get_gems
          gems.specs.specs.elements.map do |x|
            deps = x.deps.elements.map do |y|
              v = y.version.respond_to?(:version) ?
                  y.version.version.value.text_value : nil
              { gem: y.gem.text_value, version: v }
            end
            { gem: x.gem.text_value,
              version: x.version.value.text_value,
              deps: deps }
          end
        end
        def get_platforms
          platforms.platforms.elements.map do |x|
            x.name.text_value
          end
        end
        def get_dependencies
          dependencies.dependencies.elements.map do |x|
            v = x.version.respond_to?(:version) ?
                x.version.version.value.text_value : nil
            { gem: x.gem.text_value, version: v }
          end
        end
      }
    end
    rule gems
      'GEM' "\n" remote specs
    end
    rule remote
      '  ' 'remote:' ' ' url "\n"
    end
    rule specs
      '  ' 'specs:' "\n" specs:( spec* )
    end
    rule spec
      '    ' gem ' ' version "\n" deps
    end
    rule deps
      dep*
    end
    rule dep
      '      ' gem version:( ' ' version )? "\n"
    end
    rule platforms
      'PLATFORMS' "\n" platforms:( platform* )
    end
    rule platform
      '  ' name:( 'ruby' ) "\n"
    end
    rule dependencies
      'DEPENDENCIES' "\n" dependencies:( dependency* )
    end
    rule dependency
      '  ' gem version:( ' ' version )? "\n"
    end
    rule url
      ( !"\n" . )+
    end
    rule gem
      [A-Za-z0-9_-]+
    end
    rule version
      '(' value:( !')' . )+  ')'
    end
  end
end
